# Inspired by https://docs.docker.com/compose/django/
version: '3'

services:
  db:
    # NOTE: No persistance storage configured.
    # Using v17 to prevent schema permissions. See also docker-init-db.sql.
    # See: https://hub.docker.com/_/postgres/
    image: postgres:${PG_VERSION:-17}
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./docker-init-db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - referentielijsten-dev

  redis:
    image: redis
    networks:
      - referentielijsten-dev

  web:
    build: .
    image: maykinmedia/referentielijsten-api:latest
    environment: &app-env
      DJANGO_SETTINGS_MODULE: referentielijsten.conf.docker
      SECRET_KEY: ${SECRET_KEY:-django-insecure-4foe-_dk9x=88*0sljyo1_ga!!nj*x8ye6u0p(@871e)zg^+q}
      DB_NAME: referentielijsten
      DB_USER: referentielijsten
      DB_HOST: db
      CACHE_DEFAULT: redis:6379/0
      CACHE_AXES: redis:6379/0
      SUBPATH: ${SUBPATH:-/}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      DISABLE_2FA: ${DISABLE_2FA:-True}
      # Only allow all hosts for development/testing purposes!
      ALLOWED_HOSTS: '*'
    ports:
      - 8000:8000
    volumes: &app-volumes
      - media:/app/media  # Shared media volume to get access to saved OAS files
      - ./docker/setup_configuration:/app/setup_configuration
    depends_on:
      web-init:
        condition: service_completed_successfully
    labels:
      - app=referentielijsten
      - service=api
    networks:
      - referentielijsten-dev

  web-init:
    build: .
    environment:
      <<: *app-env
      #
      # Django-setup-configuration
      RUN_SETUP_CONFIG: ${RUN_SETUP_CONFIG:-true}
    command: /setup_configuration.sh
    depends_on:
      - db
      - redis
    volumes: *app-volumes
    networks:
      - referentielijsten-dev

volumes:
  media:
  db:

networks:
  referentielijsten-dev:
    name: referentielijsten-dev
